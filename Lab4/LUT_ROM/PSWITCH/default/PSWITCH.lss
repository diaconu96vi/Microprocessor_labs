
PSWITCH.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000d4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000128  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000148  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000084  00000000  00000000  00000163  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000055  00000000  00000000  000001e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000010a  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  00000348  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000082  00000000  00000000  00000368  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 68 00 	jmp	0xd0	; 0xd0 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/io.h>
#include <avr/pgmspace.h>

int main(){
   unsigned char inputs;
   DDRA = 0xff;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
   DDRB = 0;
  70:	17 ba       	out	0x17, r1	; 23
         case(4):{
            PORTA = 0b1001100;
            break;
         }
         case(5):{
            PORTA = 0b0100100;
  72:	f4 e2       	ldi	r31, 0x24	; 36
         case(3):{
            PORTA = 0b0000110;
            break;
         }
         case(4):{
            PORTA = 0b1001100;
  74:	ec e4       	ldi	r30, 0x4C	; 76
         case(5):{
            PORTA = 0b0100100;
            break;
         }
         case(6):{
            PORTA = 0b0100000;
  76:	70 e2       	ldi	r23, 0x20	; 32
         }
         case(7):{
            PORTA = 0b0001111;
            break;
         }
         default: PORTA = 0b1111110;
  78:	6e e7       	ldi	r22, 0x7E	; 126
         case(6):{
            PORTA = 0b0100000;
            break;
         }
         case(7):{
            PORTA = 0b0001111;
  7a:	5f e0       	ldi	r21, 0x0F	; 15
         case(0):{
            PORTA = 0b0000001;
            break;
         }
         case(1):{
            PORTA = 0b1001111;
  7c:	4f e4       	ldi	r20, 0x4F	; 79
            break;
         }
         case(2):{
            PORTA = 0b0010010;
  7e:	32 e1       	ldi	r19, 0x12	; 18

   while(1){
      inputs = PINB & 0b00000111;
      switch(inputs){
         case(0):{
            PORTA = 0b0000001;
  80:	21 e0       	ldi	r18, 0x01	; 1
         case(2):{
            PORTA = 0b0010010;
            break;
         }
         case(3):{
            PORTA = 0b0000110;
  82:	96 e0       	ldi	r25, 0x06	; 6
   unsigned char inputs;
   DDRA = 0xff;
   DDRB = 0;

   while(1){
      inputs = PINB & 0b00000111;
  84:	86 b3       	in	r24, 0x16	; 22
      switch(inputs){
  86:	87 70       	andi	r24, 0x07	; 7
  88:	83 30       	cpi	r24, 0x03	; 3
  8a:	b1 f0       	breq	.+44     	; 0xb8 <main+0x4c>
  8c:	84 30       	cpi	r24, 0x04	; 4
  8e:	28 f4       	brcc	.+10     	; 0x9a <main+0x2e>
  90:	81 30       	cpi	r24, 0x01	; 1
  92:	71 f0       	breq	.+28     	; 0xb0 <main+0x44>
  94:	82 30       	cpi	r24, 0x02	; 2
  96:	70 f4       	brcc	.+28     	; 0xb4 <main+0x48>
  98:	09 c0       	rjmp	.+18     	; 0xac <main+0x40>
  9a:	85 30       	cpi	r24, 0x05	; 5
  9c:	89 f0       	breq	.+34     	; 0xc0 <main+0x54>
  9e:	85 30       	cpi	r24, 0x05	; 5
  a0:	68 f0       	brcs	.+26     	; 0xbc <main+0x50>
  a2:	86 30       	cpi	r24, 0x06	; 6
  a4:	79 f0       	breq	.+30     	; 0xc4 <main+0x58>
  a6:	87 30       	cpi	r24, 0x07	; 7
  a8:	89 f4       	brne	.+34     	; 0xcc <main+0x60>
  aa:	0e c0       	rjmp	.+28     	; 0xc8 <main+0x5c>
         case(0):{
            PORTA = 0b0000001;
  ac:	2b bb       	out	0x1b, r18	; 27
  ae:	ea cf       	rjmp	.-44     	; 0x84 <main+0x18>
            break;
         }
         case(1):{
            PORTA = 0b1001111;
  b0:	4b bb       	out	0x1b, r20	; 27
  b2:	e8 cf       	rjmp	.-48     	; 0x84 <main+0x18>
            break;
         }
         case(2):{
            PORTA = 0b0010010;
  b4:	3b bb       	out	0x1b, r19	; 27
  b6:	e6 cf       	rjmp	.-52     	; 0x84 <main+0x18>
            break;
         }
         case(3):{
            PORTA = 0b0000110;
  b8:	9b bb       	out	0x1b, r25	; 27
  ba:	e4 cf       	rjmp	.-56     	; 0x84 <main+0x18>
            break;
         }
         case(4):{
            PORTA = 0b1001100;
  bc:	eb bb       	out	0x1b, r30	; 27
  be:	e2 cf       	rjmp	.-60     	; 0x84 <main+0x18>
            break;
         }
         case(5):{
            PORTA = 0b0100100;
  c0:	fb bb       	out	0x1b, r31	; 27
  c2:	e0 cf       	rjmp	.-64     	; 0x84 <main+0x18>
            break;
         }
         case(6):{
            PORTA = 0b0100000;
  c4:	7b bb       	out	0x1b, r23	; 27
  c6:	de cf       	rjmp	.-68     	; 0x84 <main+0x18>
            break;
         }
         case(7):{
            PORTA = 0b0001111;
  c8:	5b bb       	out	0x1b, r21	; 27
  ca:	dc cf       	rjmp	.-72     	; 0x84 <main+0x18>
            break;
         }
         default: PORTA = 0b1111110;
  cc:	6b bb       	out	0x1b, r22	; 27
  ce:	da cf       	rjmp	.-76     	; 0x84 <main+0x18>

000000d0 <_exit>:
  d0:	f8 94       	cli

000000d2 <__stop_program>:
  d2:	ff cf       	rjmp	.-2      	; 0xd2 <__stop_program>
